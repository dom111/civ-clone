'use strict';

const EventEmitter = require('events');
const util = require('util');
const extend = require('extend');

module.exports = (function() {
    var Player = class Player {
        constructor(details) {
            EventEmitter.call(this);

            var player = this;

            extend(player, details || {});

            player.cities = [];
            player.availableRates = game.availableTradeRates;
            player.rates = {};

            game.emit('player-added', player);

            player.assignRates();
        }

        static extend(object) {
            return extend(this.prototype, object);
        }

        assignRates() {
            var player = this,
            remaining = 1;

            player.availableRates.forEach(function(rate) {
                player.rates[rate] = Math.ceil((1 / player.availableRates.length) * 100) / 100;
                remaining -= player.rates[rate];
            });

            player.rates[player.availableRates[0]] += remaining; // TODO, spread more evenly, also, maybe 5% increments?
        }

        getRate(rate) {
            if (this.availableRates.includes(rate)) {
                return this.rates[rate];
            }

            throw `No rate '${rate}'!`;
        }
    };

    util.inherits(Player, EventEmitter);

    return Player;
})();

