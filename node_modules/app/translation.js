'use strict';

const extend = require('extend');
var translations = {};

module.exports = (function() {
    var _load = function(language) {
        // var [language, country] = game.setting('language').split(/_/); // destructuring not supported yet
        var locale = (game.setting('language') || 'en').split(/[-_]/),
        language = locale[0],
        country = locale[1];

        // these should already be ordered by weight so we shouldn't need to worry about sorting here...
        game.plugin.get('translation').filter(function(translation) {
            return (
                translation.language === language &&
                (
                    typeof translation.country === 'undefined' ||
                    translation.country === country
                )
            ) || (
                translation.country === country &&
                typeof translation.language === 'undefined'
                // don't need to check same as above, as if above matches, this is unnecessary...
            );
        }).forEach(function(translation) {
            translation.contents.forEach(function(file) {
                extend(translations, game.loadJSON(file));
            });
        });
    };

    _load();

    return {
        get: function(key) {
            return key in translations ? translations[key] : `Missing key: ${key}`;
        },
        getAll: function() {
            return translations;
        }
    }
})();
